stages:
  - archive
  - upload
  - analyze

archive:
  stage: archive
  image: alpine:3.17
  before_script:
    - apk add zip
  script:
    - zip -r ${CI_PROJECT_NAME}.zip ./src > /dev/null 2>&1
  artifacts:
    paths:
      - ${CI_PROJECT_NAME}.zip
    expire_in: 1h
    when: on_success

upload:
  stage: upload
  dependencies:
    - archive
  image: 
    name: amazon/aws-cli:2.10.0
    entrypoint: [""]
  script:
    - if [ ${CI_COMMIT_BRANCH} == "master" ]; then STAGE="pro"; else STAGE="dev"; fi
    - aws --endpoint-url=${NCP_S3_URL} s3 cp ${CI_PROJECT_NAME}.zip s3://build-result/${STAGE}/${CI_PROJECT_NAME}.zip

analyze:
  stage: analyze
  image:
    name: sonarsource/sonar-scanner-cli:4.8
    entrypoint: [""]
  variables:
    # Defines the location of the analysis task cache
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"
    # Shallow cloning needs to be disabled.
    # See https://docs.sonarqube.org/latest/analysis/gitlab-cicd/.
    GIT_DEPTH: 0
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - >
      if [[ ${CI_COMMIT_BRANCH} == "develop" ]]; then
        sonar-scanner -Dsonar.projectKey="${CI_PROJECT_NAME}-dev" -Dsonar.projectName="${CI_PROJECT_NAME}-dev"
      else
        sonar-scanner
      fi
  rules:
    # Only master&develop
    - if: '$CI_COMMIT_BRANCH == "master" || $CI_COMMIT_BRANCH == "develop"'
      when: on_success
    - when: never
